# Banner
quarkus.banner.path=banner.txt

# Datasource
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=overrwitten-by-secret-in-the-env-file
quarkus.datasource.password=overrwitten-by-secret-in-the-env-file

# This one is for development, when the application is not in a container
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/imrsac_db

# Uncomment one of the bellow for Production
# This one uses the network containing all the containers
# quarkus.datasource.jdbc.url=jdbc:mysql://db:3306/imrsac_db
# This other one uses the host machine and the mapped exposed ports of the containers
# quarkus.datasource.jdbc.url=jdbc:mysql://host.docker.internal:3306/imrsac_db


# # Database management - For development purposes only
# quarkus.hibernate-orm.database.generation=drop-and-create
# quarkus.hibernate-orm.scripts.generation=drop-and-create
# quarkus.hibernate-orm.scripts.generation.create-target=create.sql
# quarkus.hibernate-orm.scripts.generation.drop-target=drop.sql
# quarkus.hibernate-orm.log.sql=false


# swagger
quarkus.swagger-ui.always-include=true
quarkus.http.non-application-root-path=/
quarkus.swagger-ui.path=swagger
quarkus.smallrye-openapi.security-scheme=jwt


# REST
quarkus.rest.path=/api
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:4200

# RESt Client
quarkus.rest-client.chirpstack-api-devices.url=http://localhost:8090/api
quarkus.rest-client.chirpstack-api-devices.scope=jakarta.inject.Singleton


# LOG
# quarkus.log.level=ERROR


# OIDC
quarkus.oidc.auth-server-url=http://localhost:8081/realms/IMRSAC
quarkus.oidc.client-id=imrsac_quarkus_backend
quarkus.oidc.credentials.secret=overrwitten-by-secret-in-the-env-file
# @PermitAll -> permit
quarkus.http.auth.permission.public-api.paths=/swagger/*
quarkus.http.auth.permission.public-api.policy=permit


# Mosquitto Chirpstack Broker
# These were created to access the chirpstack API, support to more lorawan servers can
# be added in the future (like TTN) for instance, and properties to use their APIs can be created here.
chirpstack.api-key=overrwitten-by-secret-in-the-env-file
chirpstack.api.device-profile-id=overrwitten-by-secret-in-the-env-file
chirpstack.api.application-id=overrwitten-by-secret-in-the-env-file
# chirpstack.mosquitto.broker.address=http://host.docker.internal:1883
chirpstack.mosquitto.broker.address=http://localhost:1883
chirpstack.mosquitto.broker.username=""
chirpstack.mosquitto.broker.password=""

# smallrye MQTT
# Inbound
# mp.messaging.incoming.[channel-name].connector=smallrye-mqtt
mp.messaging.incoming.mirriga.connector=smallrye-mqtt
mp.messaging.incoming.mirriga.host=localhost
# mp.messaging.incoming.mirriga.host=host.docker.internal                    
mp.messaging.incoming.mirriga.port=1883
# The topics from mosquitto are assembled like this -> application/APPLICATION_ID/device/DEV_EUI/event/EVENT
mp.messaging.incoming.mirriga.topic=application/APPLICATION_ID/device/DEV_EUI/event/EVENT-overrwitten-by-secret-in-the-env-file
